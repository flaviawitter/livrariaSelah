generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TipoTelefone {
  id       Int    @id @default(autoincrement())
  nome     String @unique
  telefones Telefones[]
}

model Telefones {
  id         Int    @id @default(autoincrement())
  ddd        String @db.Char(3)
  numero     String @db.VarChar(20)
  tipoTelefoneId Int
  tipoTelefone   TipoTelefone @relation(fields: [tipoTelefoneId], references: [id])
  clienteId   Int?  // ✅ Relacionamento com Cliente
  cliente     Cliente? @relation(fields: [clienteId], references: [id])}

model Cliente {
  id             Int      @id @default(autoincrement())
  nome           String   @db.VarChar(100)
  cpf            String   @unique @db.VarChar(14)
  email          String   @db.VarChar(100)
  senha          String   @db.VarChar(64)
  genero         Genero
  dataNascimento DateTime?
  telefones   Telefones[]  // ✅ Um cliente pode ter vários telefones
  statusAtivo    Boolean  @default(true)
  enderecos      Endereco[]
  cartoes        Cartao[]
}

model BandeiraCartao {
  id         Int    @id @default(autoincrement())
  descricao  String @db.VarChar(50)
  cartoes    Cartao[]
}

model Cartao {
  id               Int    @id @default(autoincrement())
  apelidoCartao    String @db.VarChar(100)
  numero           String @db.VarChar(19)
  nomeTitular      String @db.VarChar(100)
  codSeguranca     String @db.VarChar(4)
  preferencial     Boolean @default(false)
  clienteId        Int
  bandeiraCartaoId Int
  cliente          Cliente @relation(fields: [clienteId], references: [id])
  bandeiraCartao   BandeiraCartao @relation(fields: [bandeiraCartaoId], references: [id])
}

model Pais {
  id    Int    @id @default(autoincrement())
  nome  String @db.VarChar(255)
  estados Estados[]
}

model Estados {
  id      Int    @id @default(autoincrement())
  nome    String @db.VarChar(100)
  paisId  Int
  pais    Pais   @relation(fields: [paisId], references: [id])
  cidades Cidades[]
}

model Cidades {
  id         Int    @id @default(autoincrement())
  nome       String @db.VarChar(100)
  estadoId   Int
  estado     Estados @relation(fields: [estadoId], references: [id])
  enderecos  Endereco[]
}

model TipoEndereco {
  id       Int    @id @default(autoincrement())
  descricao String @db.VarChar(50)
  enderecos Endereco[]
}

model TipoLogradouro {
  id       Int    @id @default(autoincrement())
  descricao String @db.VarChar(50)
  enderecos Endereco[]
}

model TipoResidencia {
  id       Int    @id @default(autoincrement())
  descricao String @db.VarChar(50)
  enderecos Endereco[]
}

model Endereco {
  id              Int    @id @default(autoincrement())
  cep            String? @db.VarChar(10)
  logradouro     String? @db.VarChar(100)
  numero         Int?
  bairro         String? @db.VarChar(50)
  clienteId      Int
  tipoEnderecoId Int
  tipoLogradouroId Int
  tipoResidenciaId Int
  cidadeId       Int
  observacao     String?
  cliente        Cliente @relation(fields: [clienteId], references: [id])
  tipoEndereco   TipoEndereco @relation(fields: [tipoEnderecoId], references: [id])
  tipoLogradouro TipoLogradouro @relation(fields: [tipoLogradouroId], references: [id])
  tipoResidencia TipoResidencia @relation(fields: [tipoResidenciaId], references: [id])
  cidade        Cidades @relation(fields: [cidadeId], references: [id])
}

model Log {
  id       Int      @id @default(autoincrement())
  entidade String   @db.VarChar(255)
  data     DateTime @default(now())
}

enum Genero {
  MASCULINO
  FEMININO
  OUTRO
}
