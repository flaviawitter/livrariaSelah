generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model autores {
  id             Int       @id @default(autoincrement())
  nome           String
  dataNascimento DateTime?
  nacionalidade  String?
}

model bandeiracartao {
  id        Int    @id @default(autoincrement())
  descricao String @db.VarChar(50)
}

model carrinho {
  id           Int     @id @default(autoincrement())
  livroId      Int
  quantidade   Int
  precoUnidade Decimal

  @@index([livroId], map: "Carrinho_livroId_fkey")
}

model cartao {
  id               Int     @id @default(autoincrement())
  apelidoCartao    String  @db.VarChar(100)
  numero           String  @db.VarChar(19)
  nomeTitular      String  @db.VarChar(100)
  codSeguranca     String  @db.VarChar(4)
  preferencial     Boolean @default(false)
  clienteId        Int
  bandeiraCartaoId Int

  @@index([bandeiraCartaoId], map: "Cartao_bandeiraCartaoId_fkey")
  @@index([clienteId], map: "Cartao_clienteId_fkey")
}

model categorias {
  id   Int    @id @default(autoincrement())
  nome String @unique(map: "Categorias_nome_key")
}

model cidades {
  id       Int    @id @default(autoincrement())
  nome     String @db.VarChar(100)
  estadoId Int

  @@index([estadoId], map: "Cidades_estadoId_fkey")
}

model classificacaoia {
  id        Int    @id @default(autoincrement())
  descricao String
  livroId   Int
  clienteId Int
}

model cliente {
  id             Int            @id @default(autoincrement())
  nome           String         @db.VarChar(100)
  cpf            String         @unique(map: "Cliente_cpf_key") @db.VarChar(14)
  email          String         @db.VarChar(100)
  senha          String         @db.VarChar(64)
  genero         String
  dataNascimento Date
  ranking        Int
  statusAtivo    Boolean        @default(true)
  enderecos      endereco[]
}

model cupom {
  id        Int     @id @default(autoincrement())
  descricao String
  clienteId Int
  validade  Boolean
}

model editoras {
  id          Int     @id @default(autoincrement())
  nome        String
  pais        String?
  anoFundacao Int?
}

model endereco {
  id               Int     @id @default(autoincrement())
  cep              String? @db.VarChar(10)
  logradouro       String? @db.VarChar(100)
  numero           Int?
  bairro           String? @db.VarChar(50)
  tipoEndereco     String
  tipoLogradouro   String
  tipoResidencia   String
  cidade           String
  observacao       String?

  clienteId        Int
  cliente          cliente @relation(fields: [clienteId], references: [id])
}

model estados {
  id     Int    @id @default(autoincrement())
  nome   String @db.VarChar(100)
}

model estoque {
  id                Int       @id @default(autoincrement())
  livroId           Int       @unique(map: "Estoque_livroId_key")
  quantidade        Int       @default(0)
  ultimaAtualizacao DateTime?
  dataEntrada       DateTime?
}

model fornecedor {
  id   Int    @id @default(autoincrement())
  nome String
}

model frete {
  id         Int     @id @default(autoincrement())
  pedidoId   Int
  enderecoId Int
  valor      Decimal
}

model grupoprecificacao {
  id          Int     @id @default(autoincrement())
  descricao   String
  margemLucro Decimal
}

model itempedido {
  id           Int     @id @default(autoincrement())
  pedidoId     Int
  livroId      Int
  quantidade   Int
  precoUnidade Decimal
  status       String
}

model livros {
  id                  Int       @id @default(autoincrement())
  titulo              String
  autorId             Int
  editoraId           Int
  fornecedorId        Int
  ano                 Int?
  edicao              String?
  isbn                String    @unique(map: "Livros_isbn_key")
  precoCusto          Decimal
  precoVenda          Decimal
  dataPublicacao      DateTime?
  paginas             Int?
  sinopse             String?
  quantidadeEstoque   Int       @default(0)
  status              String
  altura              Decimal
  largura             Decimal
  peso                Decimal
  profundidade        Decimal
  grupoPrecificacaoId Int
  codigoBarras        String    @unique(map: "Livros_codigoBarras_key")

  @@index([autorId], map: "Livros_autorId_fkey")
  @@index([editoraId], map: "Livros_editoraId_fkey")
  @@index([fornecedorId], map: "Livros_fornecedorId_fkey")
  @@index([grupoPrecificacaoId], map: "Livros_grupoPrecificacaoId_fkey")
}

model livrosativacao {
  id       Int @id @default(autoincrement())
  livroId  Int
  motivoId Int

  @@index([livroId], map: "LivrosAtivacao_livroId_fkey")
  @@index([motivoId], map: "LivrosAtivacao_motivoId_fkey")
}

model livroscategorias {
  livroId     Int
  categoriaId Int

  @@id([livroId, categoriaId])
  @@index([categoriaId], map: "LivrosCategorias_categoriaId_fkey")
}

model livrosinativacao {
  id       Int @id @default(autoincrement())
  livroId  Int
  motivoId Int

  @@index([livroId], map: "LivrosInativacao_livroId_fkey")
  @@index([motivoId], map: "LivrosInativacao_motivoId_fkey")
}

model log {
  id       Int      @id @default(autoincrement())
  entidade String   @db.VarChar(255)
  data     DateTime @default(now())
}

model motivoativacao {
  id        Int    @id @default(autoincrement())
  descricao String
}

model motivoinativacao {
  id        Int    @id @default(autoincrement())
  descricao String
}

model pagamentos {
  id              Int      @id @default(autoincrement())
  pedidoId        Int
  dataPagamento   DateTime
  valor           Decimal
  metodoPagamento String
  status          String
}

model pedidos {
  id         Int       @id @default(autoincrement())
  clienteId  Int
  dataPedido DateTime?
  totalPreco Decimal   @default(0.000000000000000000000000000000)
  status     String
}

model telefones {
  id             Int    @id @default(autoincrement())
  ddd            String @db.Char(3)
  numero         String @db.VarChar(20)
  tipoTelefone   String
  clienteId      Int?

  @@index([clienteId], map: "Telefones_clienteId_fkey")
 
}
